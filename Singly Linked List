class Node {

int data;

Node next; Node(int data) { this.data data; this.next = null; }} class SinglyLinkedList [ Node head;

public void insert(int data) { Node newNode = new Node(data); if (head == null) { head = newNode; } else { Node current = head; while (current.next != null) [ current = current.next; current.next = newNode;

public void insertAtBeginning(int data) {

Node newNode = new Node(data); newNode.next = head; head = newNode; ] public void delete(int key) [ if (head == null) { System.out.println("List is empty."); return; } if (head.data = = key) { head head.next; return; } Node current = head; while (current.next != null && current.next.data != key) [ current current.next; if (current.next == null) { } System.out.println("Element not found."); } else { current.next = current.next.next; public void display() { Node current = head; if (current == null) { System.out.println("List is empty."); return; } while (current != null) { }} System.out.print(current.data + "->"); current = current.next;

System.out.println("null"); ]] class Main {

public static void main(String[] args) { Singly LinkedList list = new SinglyLinkedList(); list.insert(10); list.insert(20); list.insert(30);

list.insertAtBeginning(5);

System.out.println("Linked List:"); list.display(); System.out.println("After deleting 20:"); list.display(); }}

list.delete(20);
